CREATE TABLE QUESTIONS (
	ID SERIAL NOT NULL,
	IS_COMMON BOOLEAN NOT NULL,
	SPECIFICATION TEXT,
	CONTENT_EN TEXT NOT NULL,
	CONTENT_CZ TEXT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE ANSWERS (
	ID SERIAL NOT NULL,
	QUESTION_ID SERIAL NOT NULL,
	LETTER TEXT NOT NULL,
	CONTENT_EN TEXT NOT NULL,
	CONTENT_CZ TEXT NOT NULL,
	PARAMS TEXT NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (QUESTION_ID) REFERENCES QUESTIONS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE PROFILES (
	ID SERIAL NOT NULL,
	CORRESPONDING_TYPE TEXT NOT NULL,
	COMMUNICATION FLOAT NOT NULL,
	EXPERIENCE FLOAT NOT NULL,
	EXPECTATIONS FLOAT NOT NULL,
	PEOPLE FLOAT NOT NULL,
	KNOWLEDGE FLOAT NOT NULL,
	RESOURCES FLOAT NOT NULL,
	SPECIFICITY FLOAT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE RESULTS (
	ID SERIAL NOT NULL,
	STR_ID TEXT NOT NULL UNIQUE,
	START_DATE TIMESTAMP NOT NULL,
	COMPLETE_DATE TIMESTAMP NOT NULL,
	PRIMARY_PROFILE_ID SERIAL NOT NULL,
	SECONDARY_PROFILE_ID SERIAL NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (PRIMARY_PROFILE_ID) REFERENCES PROFILES(ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (SECONDARY_PROFILE_ID) REFERENCES PROFILES(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE RESULTS_ANSWERS (
	ID SERIAL NOT NULL,
	ANSWER_ID SERIAL NOT NULL,
	RESULT_ID SERIAL NOT NULL,
	PRIMARY KEY (ID),
	FOREIGN KEY (ANSWER_ID) REFERENCES ANSWERS(ID) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (RESULT_ID) REFERENCES RESULTS(ID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE COMMENTS (
	ID SERIAL NOT NULL,
	CONTENT_EN TEXT NOT NULL,
	CONTENT_CZ TEXT NOT NULL,
	NOTE_EN TEXT NOT NULL,
	NOTE_CZ TEXT NOT NULL,
	CONDITION TEXT NOT NULL,
	COMMENT_TYPE TEXT NOT NULL,
	PRIMARY KEY (ID)
);